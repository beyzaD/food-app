name: api-build-deploy-iis

# trigger:
#   branches:
#     include:
#       - master
#   paths:
#     include:
#       - food-api

trigger: none

variables:
  buildConfiguration: Release
  apifolder: food-api
  websiteName: 'FoodApi'
  appPoolName: 'FoodApiPool'

pool:
  vmImage: "ubuntu-20.04"

stages:
  - stage: "Build"
    jobs:
      - job: "Build"
        displayName: "Build Api"

        steps:
          - task: UseDotNet@2
            displayName: "Install .NET 6 SDK"
            inputs:
              packageType: "sdk"
              version: "6.x"

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: "$(apifolder)/*.csproj"
              arguments: "--configuration $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: "publish"
              publishWebProjects: true
              arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"

          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: apidrop
            displayName: "Publish Artifact: apidrop"

  - stage: 'DeployIISStaging'
    displayName: 'Deploy to IIS'
    dependsOn: 'Build'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:    
    - deployment: Staging
      displayName: Staging
      environment: 
        name: 'Staging'    
        resourceType: VirtualMachine
      variables:
      - name: websitePhysicalPath
        value: '%SystemDrive%\data\$(websiteName)'

      strategy:
        runOnce:
          deploy:
            steps:             
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: "current"
                downloadType: "single"
                artifactName: "apidrop"
                downloadPath: "$(Pipeline.Workspace)"
            - task: IISWebAppManagementOnMachineGroup@0
              inputs:            
                IISDeploymentType: 'IISWebsite'
                ActionIISWebsite: 'CreateOrUpdateWebsite'
                WebsiteName: '$(websiteName)'
                WebsitePhysicalPath: '$(websitePhysicalPath)'
                WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                CreateOrUpdateAppPoolForWebsite: true
                AppPoolNameForWebsite: '$(appPoolName)'
                DotNetVersionForWebsite: 'No Managed Code'
                PipeLineModeForWebsite: 'Integrated'
                AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                AddBinding: true
                Bindings: |
                    {
                        bindings:[
                            {
                                "protocol":"http",
                                "ipAddress":"",
                                "hostname":"",
                                "port":"8099",
                                "sslThumbprint":"",
                                "sniFlag":false
                            }
                        ]
                    }
            - task: IISWebAppDeploymentOnMachineGroup@0
              inputs:
                WebSiteName: '$(websiteName)'
                Package: '$(Pipeline.Workspace)/apidrop//**/*.zip'

  - stage: 'DeployIISProd'
    displayName: 'Deploy to IIS'
    dependsOn: 'Build'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:    
    - deployment: Prod
      displayName: Prod
      environment: 
        name: 'Prod'    
        resourceType: VirtualMachine
      variables:
      - name: websitePhysicalPath
        value: '%SystemDrive%\data\$(websiteName)'

      strategy:
        runOnce:
          deploy:
            steps:             
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: "current"
                downloadType: "single"
                artifactName: "apidrop"
                downloadPath: "$(Pipeline.Workspace)"
            - task: IISWebAppManagementOnMachineGroup@0
              inputs:            
                IISDeploymentType: 'IISWebsite'
                ActionIISWebsite: 'CreateOrUpdateWebsite'
                WebsiteName: '$(websiteName)'
                WebsitePhysicalPath: '$(websitePhysicalPath)'
                WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                CreateOrUpdateAppPoolForWebsite: true
                AppPoolNameForWebsite: '$(appPoolName)'
                DotNetVersionForWebsite: 'No Managed Code'
                PipeLineModeForWebsite: 'Integrated'
                AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                AddBinding: true
                Bindings: |
                    {
                        bindings:[
                            {
                                "protocol":"http",
                                "ipAddress":"",
                                "hostname":"",
                                "port":"8099",
                                "sslThumbprint":"",
                                "sniFlag":false
                            }
                        ]
                    }
            - task: IISWebAppDeploymentOnMachineGroup@0
              inputs:
                WebSiteName: '$(websiteName)'
                Package: '$(Pipeline.Workspace)/apidrop//**/*.zip'                